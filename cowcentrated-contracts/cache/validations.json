{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin-4/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin-4/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin-4/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin-4/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin-4/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin-4/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "2d3ba6708653caa27f583fae003f53f4c0351e65951f8bb0879312587e0a4707",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin-4/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin-4/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin-4/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin-4/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin-4/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin-4/contracts/proxy/beacon/BeaconProxy.sol:23",
        "version": {
          "withMetadata": "b238bc0e296b8ee02a7c3377ee463d5f49187c8211072ecb33e7abe8b261f891",
          "withoutMetadata": "a5edd3a495286c0a0ec724f75e02fdd24cc33a18225501d83dd9fdb9a25940f8",
          "linkedWithoutMetadata": "a5edd3a495286c0a0ec724f75e02fdd24cc33a18225501d83dd9fdb9a25940f8"
        },
        "inherit": [
          "@openzeppelin-4/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin-4/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin-4/contracts/proxy/beacon/BeaconProxy.sol:39"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin-4/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_beacon",
            "src": "@openzeppelin-4/contracts/proxy/beacon/BeaconProxy.sol:25"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin-4/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin-4/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "cf0fb53de9c8dc7776fa09a493bcb606e8c440578821e1c3768ad48edb23a949",
          "withoutMetadata": "078b439ffa216f2c50211b769e790343c806ca400318d96993b68228c11eb72f",
          "linkedWithoutMetadata": "078b439ffa216f2c50211b769e790343c806ca400318d96993b68228c11eb72f"
        },
        "inherit": [
          "@openzeppelin-4/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin-4/contracts/utils/Context.sol:Context",
          "@openzeppelin-4/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin-4/contracts/proxy/beacon/UpgradeableBeacon.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin-4/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin-4/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin-4/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin-4/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin-4/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin-4/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin-4/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "1306fdb9ddedf82cac071a7793b599e59734e9bf42d4829eff3f9d37b805417d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin-4/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin-4/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin-4/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin-4/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "eecd642baa09e315745f0c551458beeead45827ed341d830b3fbc9654701b387",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin-4/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin-4/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin-4/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "faac3a0b729d69201f142a3d4b9f5e49e9c4646a07c31918fa88422e03e07743",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin-4/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin-4/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin-4/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "66b4340f8430688c01ff7d95a8f7b0e0684e8c49657d8e060584b40cf95722fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "166a70ed05381db5bf1ee141e0ddcd770c6a6e3afc7528cf1056aaf4e89e81f3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "16902ab1b1d8c4aa3ccc495f40b168c75574f85af34bd6c4e3004e29d3e5ff5b",
          "withoutMetadata": "693080266cd544414d5e63be88737507ddd587b1430f5aeaeedafa2e03f4a2df",
          "linkedWithoutMetadata": "693080266cd544414d5e63be88737507ddd587b1430f5aeaeedafa2e03f4a2df"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "666c5ac2783266b19689266cecc4cb422cafd2f34e35623acbaa7753c45c2f0c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "1f0e79000a07f6b2f58697df6d1e7716bc9654dbe2ff75b94a4d7b8a830b1114",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IBeefyVaultConcLiq.sol:IBeefyVaultConcLiq": {
        "src": "contracts/interfaces/beefy/IBeefyVaultConcLiq.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "previewDeposit(uint256,uint256)",
          "previewWithdraw(uint256)",
          "strategy()",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IFeeConfig.sol:IFeeConfig": {
        "src": "contracts/interfaces/beefy/IFeeConfig.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getFees(address)",
          "stratFeeId(address)",
          "setStratFeeId(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IRewardPool.sol:IRewardPool": {
        "src": "contracts/interfaces/beefy/IRewardPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "notifyRewardAmount(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IStrategyConcLiq.sol:IStrategyConcLiq": {
        "src": "contracts/interfaces/beefy/IStrategyConcLiq.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balances()",
          "beforeAction()",
          "deposit()",
          "withdraw(uint256,uint256)",
          "pool()",
          "lpToken0()",
          "lpToken1()",
          "isCalm()",
          "price()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IStrategyFactory.sol:IStrategyFactory": {
        "src": "contracts/interfaces/beefy/IStrategyFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "native()",
          "globalPause()",
          "keeper()",
          "beefyFeeRecipient()",
          "beefyFeeConfig()",
          "rebalancers(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IStrategyUniswapV3.sol:IStrategyUniswapV3": {
        "src": "contracts/interfaces/beefy/IStrategyUniswapV3.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "sqrtPrice()",
          "range()",
          "lpToken0ToNativePath()",
          "lpToken1ToNativePath()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/beefy/IStrategyVelodrome.sol:IStrategyVelodrome": {
        "src": "contracts/interfaces/beefy/IStrategyVelodrome.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "sqrtPrice()",
          "range()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/uniswap/IQuoter.sol:IQuoter": {
        "src": "contracts/interfaces/uniswap/IQuoter.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/uniswap/IUniswapRouterV3.sol:IUniswapRouterV3": {
        "src": "contracts/interfaces/uniswap/IUniswapRouterV3.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/uniswap/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "contracts/interfaces/uniswap/IUniswapV3Pool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()",
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "mint(address,int24,int24,uint128,bytes)",
          "observe(uint32[])",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/velodrome/ICLGauge.sol:ICLGauge": {
        "src": "contracts/interfaces/velodrome/ICLGauge.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "nft()",
          "voter()",
          "pool()",
          "gaugeFactory()",
          "feesVotingReward()",
          "periodFinish()",
          "rewardRate()",
          "rewards(uint256)",
          "lastUpdateTime(uint256)",
          "rewardRateByEpoch(uint256)",
          "fees0()",
          "fees1()",
          "token0()",
          "token1()",
          "tickSpacing()",
          "left()",
          "rewardToken()",
          "isPool()",
          "rewardGrowthInside(uint256)",
          "initialize(address,address,address,address,address,address,address,int24,bool)",
          "earned(address,uint256)",
          "getReward(address)",
          "getReward(uint256)",
          "notifyRewardAmount(uint256)",
          "notifyRewardWithoutClaim(uint256)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "increaseStakedLiquidity(uint256,uint256,uint256,uint256,uint256,uint256)",
          "decreaseStakedLiquidity(uint256,uint128,uint256,uint256,uint256)",
          "stakedValues(address)",
          "stakedByIndex(address,uint256)",
          "stakedContains(address,uint256)",
          "stakedLength(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/velodrome/INftPositionManager.sol:INftPositionManager": {
        "src": "contracts/interfaces/velodrome/INftPositionManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "positions(uint256)",
          "tokenDescriptor()",
          "owner()",
          "mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)",
          "setTokenDescriptor(address)",
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/velodrome/IVeloPool.sol:IVeloPool": {
        "src": "contracts/interfaces/velodrome/IVeloPool.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()",
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "mint(address,int24,int24,uint128,bytes)",
          "observe(uint32[])",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/velodrome/IVeloRouter.sol:IVeloRouter": {
        "src": "contracts/interfaces/velodrome/IVeloRouter.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(bytes,bytes[],uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/rewardpool/BeefyRewardPool.sol:BeefyRewardPool": {
        "src": "contracts/rewardpool/BeefyRewardPool.sol:14",
        "version": {
          "withMetadata": "4d1f28a106eb330e19eb79ef104043f8f136e67d6b9840e65dc363ae0a8f6eff",
          "withoutMetadata": "1d72aeaff798a639c3aff4f99c45542c18df57804d2733438fdcdf38c129d4a5",
          "linkedWithoutMetadata": "1d72aeaff798a639c3aff4f99c45542c18df57804d2733438fdcdf38c129d4a5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string)",
          "stake(uint256)",
          "stakeWithPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "withdraw(uint256)",
          "exit()",
          "getReward()",
          "earned(address)",
          "earned(address,address)",
          "rewardInfo(uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "notifyRewardAmount(address,uint256,uint256)",
          "removeReward(address,address)",
          "rescueTokens(address,address)",
          "setWhitelist(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stakedToken",
              "offset": 0,
              "slot": "151",
              "type": "t_contract(IERC20Upgradeable)2985",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:37"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:40"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:43"
            },
            {
              "label": "rewardMax",
              "offset": 0,
              "slot": "154",
              "type": "t_uint256",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:46"
            },
            {
              "label": "_index",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:49"
            },
            {
              "label": "_id",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:53"
            },
            {
              "label": "_rewardInfo",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_bytes32,t_struct(RewardInfo)5044_storage)",
              "contract": "BeefyRewardPool",
              "src": "contracts/rewardpool/BeefyRewardPool.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)2985": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RewardInfo)5044_storage)": {
              "label": "mapping(bytes32 => struct BeefyRewardPool.RewardInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RewardInfo)5044_storage": {
              "label": "struct BeefyRewardPool.RewardInfo",
              "members": [
                {
                  "label": "periodFinish",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rewardPerTokenStored",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "userRewardPerTokenPaid",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "earned",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/rewardpool/BeefyRewardPoolFactory.sol:BeefyRewardPoolFactory": {
        "src": "contracts/rewardpool/BeefyRewardPoolFactory.sol:9",
        "version": {
          "withMetadata": "76e812fa2d2c65150b84dff14fc27a172771f1eeb3d81276dd04b10b1fb451ec",
          "withoutMetadata": "b8a64eb39bb9a49ce1408bbc4766e7df59c75fbd6153ec63ffc157716df53733",
          "linkedWithoutMetadata": "b8a64eb39bb9a49ce1408bbc4766e7df59c75fbd6153ec63ffc157716df53733"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "(address)",
          "cloneRewardPool()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeefyRewardPoolFactory",
            "src": "contracts/rewardpool/BeefyRewardPoolFactory.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "instance",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeefyRewardPool)6236",
              "contract": "BeefyRewardPoolFactory",
              "src": "contracts/rewardpool/BeefyRewardPoolFactory.sol:13"
            }
          ],
          "types": {
            "t_contract(BeefyRewardPool)6236": {
              "label": "contract BeefyRewardPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/strategies/StratFeeManagerInitializable.sol:StratFeeManagerInitializable": {
        "src": "contracts/strategies/StratFeeManagerInitializable.sol:10",
        "version": {
          "withMetadata": "da1ae3319896df9e5ffa68f6a64b75307549a8ed14a69bd9342878e66cf82eff",
          "withoutMetadata": "c42b800190b6db2cd669dbfe150d945a470c4a8c27ae9d9867bda73082963192",
          "linkedWithoutMetadata": "c42b800190b6db2cd669dbfe150d945a470c4a8c27ae9d9867bda73082963192"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "keeper()",
          "beefyFeeRecipient()",
          "beefyFeeConfig()",
          "getAllFees()",
          "getStratFeeId()",
          "setStratFeeId(uint256)",
          "setUnirouter(address)",
          "setStrategist(address)",
          "depositFee()",
          "withdrawFee()",
          "lockedProfit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "native",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:19"
            },
            {
              "label": "vault",
              "offset": 0,
              "slot": "152",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:22"
            },
            {
              "label": "unirouter",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:25"
            },
            {
              "label": "strategist",
              "offset": 0,
              "slot": "154",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:28"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "155",
              "type": "t_contract(IStrategyFactory)3974",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:31"
            },
            {
              "label": "totalLocked0",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:34"
            },
            {
              "label": "totalLocked1",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:37"
            },
            {
              "label": "lastHarvest",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "159",
              "type": "t_array(t_uint256)49_storage",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:201"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IStrategyFactory)3974": {
              "label": "contract IStrategyFactory",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/strategies/StrategyFactory.sol:StrategyFactory": {
        "src": "contracts/strategies/StrategyFactory.sol:10",
        "version": {
          "withMetadata": "c887a3b1dd2fa75e6875f86b738f95d42ad9fcc837209863cdb9e16bb24c29b4",
          "withoutMetadata": "1e47857dd49baaf255bf02a3355b0d83d4f54d85700d16df739afc165f3a9012",
          "linkedWithoutMetadata": "1e47857dd49baaf255bf02a3355b0d83d4f54d85700d16df739afc165f3a9012"
        },
        "inherit": [
          "@openzeppelin-4/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin-4/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "createStrategy(string)",
          "upgradeTo(string,address)",
          "addStrategy(string,address)",
          "pauseAllStrats()",
          "unpauseAllStrats()",
          "addRebalancer(address)",
          "removeRebalancer(address)",
          "setBeefyFeeRecipient(address)",
          "setBeefyFeeConfig(address)",
          "setKeeper(address)",
          "getImplementation(string)",
          "getStrategyTypes()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StrategyFactory",
            "src": "contracts/strategies/StrategyFactory.sol:71"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin-4/contracts/access/Ownable.sol:21"
            },
            {
              "label": "instances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_contract(UpgradeableBeacon)642)",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:13"
            },
            {
              "label": "rebalancers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:16"
            },
            {
              "label": "strategyTypes",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:19"
            },
            {
              "label": "native",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:22"
            },
            {
              "label": "keeper",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:25"
            },
            {
              "label": "beefyFeeRecipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:28"
            },
            {
              "label": "beefyFeeConfig",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:31"
            },
            {
              "label": "globalPause",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "StrategyFactory",
              "src": "contracts/strategies/StrategyFactory.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(UpgradeableBeacon)642": {
              "label": "contract UpgradeableBeacon",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_contract(UpgradeableBeacon)642)": {
              "label": "mapping(string => contract UpgradeableBeacon)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:StrategyPassiveManagerUniswap": {
        "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:22",
        "version": {
          "withMetadata": "c733f3d69317804f2dbd1dcbffe003d2f34e6c91344b3ce5c68b1e902a0e436f",
          "withoutMetadata": "4495498a0846ae695186708ad48569bc5e92f58f711e98577e4cf253177b4699",
          "linkedWithoutMetadata": "4495498a0846ae695186708ad48569bc5e92f58f711e98577e4cf253177b4699"
        },
        "inherit": [
          "contracts/interfaces/beefy/IStrategyUniswapV3.sol:IStrategyUniswapV3",
          "contracts/interfaces/beefy/IStrategyConcLiq.sol:IStrategyConcLiq",
          "contracts/strategies/StratFeeManagerInitializable.sol:StratFeeManagerInitializable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin-4/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/utils/TickMath.sol:TickMath",
          "contracts/utils/LiquidityAmounts.sol:LiquidityAmounts",
          "contracts/utils/UniV3Utils.sol:UniV3Utils",
          "@openzeppelin-4/contracts/utils/math/SignedMath.sol:SignedMath",
          "contracts/utils/TickUtils.sol:TickUtils",
          "contracts/utils/FullMath.sol:FullMath"
        ],
        "methods": [
          "()",
          "isCalm()",
          "initialize(address,address,int24,bytes,bytes,(address,address,address,address))",
          "beforeAction()",
          "deposit()",
          "withdraw(uint256,uint256)",
          "harvest(address)",
          "harvest()",
          "rebalance()",
          "claimEarnings()",
          "balances()",
          "balancesOfThis()",
          "balancesOfPool()",
          "lockedProfit()",
          "range()",
          "getKeys()",
          "currentTick()",
          "price()",
          "sqrtPrice()",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "setLpToken0ToNativePath(bytes)",
          "setLpToken1ToNativePath(bytes)",
          "setDeviation(int56)",
          "lpToken0ToNative()",
          "lpToken1ToNative()",
          "lpToken0ToNativePrice()",
          "lpToken1ToNativePrice()",
          "twap()",
          "setTwapInterval(uint32)",
          "setPositionWidth(int24)",
          "setUnirouter(address)",
          "retireVault()",
          "panic(uint256,uint256)",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "native",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:19"
            },
            {
              "label": "vault",
              "offset": 0,
              "slot": "152",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:22"
            },
            {
              "label": "unirouter",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:25"
            },
            {
              "label": "strategist",
              "offset": 0,
              "slot": "154",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:28"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "155",
              "type": "t_contract(IStrategyFactory)3974",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:31"
            },
            {
              "label": "totalLocked0",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:34"
            },
            {
              "label": "totalLocked1",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:37"
            },
            {
              "label": "lastHarvest",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "159",
              "type": "t_array(t_uint256)49_storage",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:201"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "208",
              "type": "t_address",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:35"
            },
            {
              "label": "quoter",
              "offset": 0,
              "slot": "209",
              "type": "t_address",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:37"
            },
            {
              "label": "lpToken0",
              "offset": 0,
              "slot": "210",
              "type": "t_address",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:39"
            },
            {
              "label": "lpToken1",
              "offset": 0,
              "slot": "211",
              "type": "t_address",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:41"
            },
            {
              "label": "fees0",
              "offset": 0,
              "slot": "212",
              "type": "t_uint256",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:44"
            },
            {
              "label": "fees1",
              "offset": 0,
              "slot": "213",
              "type": "t_uint256",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:45"
            },
            {
              "label": "lpToken0ToNativePath",
              "offset": 0,
              "slot": "214",
              "type": "t_bytes_storage",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:48"
            },
            {
              "label": "lpToken1ToNativePath",
              "offset": 0,
              "slot": "215",
              "type": "t_bytes_storage",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:50"
            },
            {
              "label": "positionMain",
              "offset": 0,
              "slot": "216",
              "type": "t_struct(Position)7211_storage",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:60"
            },
            {
              "label": "positionAlt",
              "offset": 0,
              "slot": "217",
              "type": "t_struct(Position)7211_storage",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:65"
            },
            {
              "label": "positionWidth",
              "offset": 0,
              "slot": "218",
              "type": "t_int24",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:68"
            },
            {
              "label": "maxTickDeviation",
              "offset": 3,
              "slot": "218",
              "type": "t_int56",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:71"
            },
            {
              "label": "twapInterval",
              "offset": 10,
              "slot": "218",
              "type": "t_uint32",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:74"
            },
            {
              "label": "minting",
              "offset": 14,
              "slot": "218",
              "type": "t_bool",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:77"
            },
            {
              "label": "initTicks",
              "offset": 15,
              "slot": "218",
              "type": "t_bool",
              "contract": "StrategyPassiveManagerUniswap",
              "src": "contracts/strategies/uniswap/StrategyPassiveManagerUniswap.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IStrategyFactory)3974": {
              "label": "contract IStrategyFactory",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Position)7211_storage": {
              "label": "struct StrategyPassiveManagerUniswap.Position",
              "members": [
                {
                  "label": "tickLower",
                  "type": "t_int24",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickUpper",
                  "type": "t_int24",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:StrategyPassiveManagerVelodrome": {
        "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:28",
        "version": {
          "withMetadata": "7266a847607207572fffb737a8dd6f97a2196a1225bf1e0c40a095c7eaf52af6",
          "withoutMetadata": "f7971f34aac5619857631147f46f790ed4e8fdb6f936a8a2b77f114092e7bb91",
          "linkedWithoutMetadata": "f7971f34aac5619857631147f46f790ed4e8fdb6f936a8a2b77f114092e7bb91"
        },
        "inherit": [
          "contracts/interfaces/beefy/IStrategyVelodrome.sol:IStrategyVelodrome",
          "contracts/interfaces/beefy/IStrategyConcLiq.sol:IStrategyConcLiq",
          "contracts/strategies/StratFeeManagerInitializable.sol:StratFeeManagerInitializable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin-4/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/utils/TickMath.sol:TickMath",
          "contracts/utils/LiquidityAmounts.sol:LiquidityAmounts",
          "contracts/utils/VeloSwapUtils.sol:VeloSwapUtils",
          "@openzeppelin-4/contracts/utils/math/SignedMath.sol:SignedMath",
          "contracts/utils/TickUtils.sol:TickUtils",
          "contracts/utils/FullMath.sol:FullMath"
        ],
        "methods": [
          "isCalm()",
          "initialize(address,address,address,address,address,address,int24,bytes[],(address,address,address,address))",
          "beforeAction()",
          "deposit()",
          "withdraw(uint256,uint256)",
          "moveTicks()",
          "harvest(address)",
          "harvest()",
          "balances()",
          "balancesOfThis()",
          "balancesOfPool()",
          "range()",
          "currentTick()",
          "price()",
          "sqrtPrice()",
          "setOutputToNativePath(bytes)",
          "setDeviation(int56)",
          "outputToNative()",
          "lpToken0ToNativePrice()",
          "lpToken1ToNativePrice()",
          "twap()",
          "setTwapInterval(uint32)",
          "setPositionWidth(int24)",
          "setRewardPool(address)",
          "setUnirouter(address)",
          "retireVault()",
          "panic(uint256,uint256)",
          "unpause()",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "native",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:19"
            },
            {
              "label": "vault",
              "offset": 0,
              "slot": "152",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:22"
            },
            {
              "label": "unirouter",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:25"
            },
            {
              "label": "strategist",
              "offset": 0,
              "slot": "154",
              "type": "t_address",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:28"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "155",
              "type": "t_contract(IStrategyFactory)3974",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:31"
            },
            {
              "label": "totalLocked0",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:34"
            },
            {
              "label": "totalLocked1",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:37"
            },
            {
              "label": "lastHarvest",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "159",
              "type": "t_array(t_uint256)49_storage",
              "contract": "StratFeeManagerInitializable",
              "src": "contracts/strategies/StratFeeManagerInitializable.sol:201"
            },
            {
              "label": "pool",
              "offset": 0,
              "slot": "208",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:41"
            },
            {
              "label": "quoter",
              "offset": 0,
              "slot": "209",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:44"
            },
            {
              "label": "nftManager",
              "offset": 0,
              "slot": "210",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:46"
            },
            {
              "label": "gauge",
              "offset": 0,
              "slot": "211",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:49"
            },
            {
              "label": "output",
              "offset": 0,
              "slot": "212",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:51"
            },
            {
              "label": "lpToken0",
              "offset": 0,
              "slot": "213",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:53"
            },
            {
              "label": "lpToken1",
              "offset": 0,
              "slot": "214",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:55"
            },
            {
              "label": "rewardPool",
              "offset": 0,
              "slot": "215",
              "type": "t_address",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:58"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "216",
              "type": "t_uint256",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:61"
            },
            {
              "label": "outputToNativePath",
              "offset": 0,
              "slot": "217",
              "type": "t_bytes_storage",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:64"
            },
            {
              "label": "lpToken0ToNativePath",
              "offset": 0,
              "slot": "218",
              "type": "t_bytes_storage",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:66"
            },
            {
              "label": "lpToken1ToNativePath",
              "offset": 0,
              "slot": "219",
              "type": "t_bytes_storage",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:68"
            },
            {
              "label": "positionMain",
              "offset": 0,
              "slot": "220",
              "type": "t_struct(Position)9733_storage",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:79"
            },
            {
              "label": "positionAlt",
              "offset": 0,
              "slot": "222",
              "type": "t_struct(Position)9733_storage",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:85"
            },
            {
              "label": "positionWidth",
              "offset": 0,
              "slot": "224",
              "type": "t_int24",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:89"
            },
            {
              "label": "maxTickDeviation",
              "offset": 3,
              "slot": "224",
              "type": "t_int56",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:93"
            },
            {
              "label": "twapInterval",
              "offset": 10,
              "slot": "224",
              "type": "t_uint32",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:96"
            },
            {
              "label": "initTicks",
              "offset": 14,
              "slot": "224",
              "type": "t_bool",
              "contract": "StrategyPassiveManagerVelodrome",
              "src": "contracts/strategies/velodrome/StrategyPassiveManagerVelodrome.sol:99"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IStrategyFactory)3974": {
              "label": "contract IStrategyFactory",
              "numberOfBytes": "20"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Position)9733_storage": {
              "label": "struct StrategyPassiveManagerVelodrome.Position",
              "members": [
                {
                  "label": "nftId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickLower",
                  "type": "t_int24",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tickUpper",
                  "type": "t_int24",
                  "offset": 3,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/BytesLib.sol:BytesLib": {
        "src": "contracts/utils/BytesLib.sol:12",
        "version": {
          "withMetadata": "75522ddb534f3101ece97896665c35c3ad3d11695dae180b0a3c1cce69de9c8a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/FullMath.sol:FullMath": {
        "src": "contracts/utils/FullMath.sol:7",
        "version": {
          "withMetadata": "6484fb921d88bf6e8136d1a99925c663980cf5494c8b11be399b4665ff2775a4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/LiquidityAmounts.sol:FixedPoint96": {
        "src": "contracts/utils/LiquidityAmounts.sol:9",
        "version": {
          "withMetadata": "371edf80a0ef036d3a26ea60740cd55d5a9400c21ffc621df9b30baebed7bd0a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/LiquidityAmounts.sol:LiquidityAmounts": {
        "src": "contracts/utils/LiquidityAmounts.sol:17",
        "version": {
          "withMetadata": "b3559028ecb9dee9532fadec8295d8270d2caea2a6cabe3ad30e021c6ef9c125",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/utils/LiquidityAmounts.sol:FixedPoint96",
          "contracts/utils/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/Path.sol:Path": {
        "src": "contracts/utils/Path.sol:8",
        "version": {
          "withMetadata": "0ca76089851bad80906df313dd38a43a07a815ee6ed69f3b789c2e841cd668b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/utils/BytesLib.sol:BytesLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/TickMath.sol:TickMath": {
        "src": "contracts/utils/TickMath.sol:7",
        "version": {
          "withMetadata": "a3727053d4c088c76df36d5e3c600520d3283c33d83c627c67643b1befd9b1ec",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/TickUtils.sol:TickUtils": {
        "src": "contracts/utils/TickUtils.sol:8",
        "version": {
          "withMetadata": "041b10cdc3400f4bf5f93adeaf4849963cfe39c3a606cfc749d7425c506b73dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/utils/Path.sol:Path",
          "contracts/utils/TickMath.sol:TickMath",
          "contracts/utils/LiquidityAmounts.sol:LiquidityAmounts",
          "contracts/utils/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/UniV3Utils.sol:UniV3Utils": {
        "src": "contracts/utils/UniV3Utils.sol:8",
        "version": {
          "withMetadata": "042da79418dbae2161e6c67cb19bf360732c9d44fbf0d622a1ffd04459899751",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/utils/Path.sol:Path"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/utils/VeloSwapUtils.sol:VeloSwapUtils": {
        "src": "contracts/utils/VeloSwapUtils.sol:8",
        "version": {
          "withMetadata": "1325766e17d8eb85dd6cd70efd13215539aa1c7ee24a1d9609b1c0e1f9dc8f0b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/utils/Path.sol:Path"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/vault/BeefyVaultConcLiq.sol:BeefyVaultConcLiq": {
        "src": "contracts/vault/BeefyVaultConcLiq.sol:16",
        "version": {
          "withMetadata": "01d54c9b820c6da01d703608b4cbe3b4c9392bff065fe4312d0a7548d62f3fb2",
          "withoutMetadata": "a47bc91e06fb69cdcdc3ec24f473abb7e66d7157ff831d8e51385b0a20604d52",
          "linkedWithoutMetadata": "a47bc91e06fb69cdcdc3ec24f473abb7e66d7157ff831d8e51385b0a20604d52"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable"
        ],
        "methods": [
          "()",
          "initialize(address,string,string)",
          "isCalm()",
          "want()",
          "wants()",
          "balances()",
          "previewWithdraw(uint256)",
          "previewDeposit(uint256,uint256)",
          "deposit(uint256,uint256,uint256)",
          "withdrawAll(uint256,uint256)",
          "withdraw(uint256,uint256,uint256)",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "strategy",
              "offset": 0,
              "slot": "201",
              "type": "t_contract(IStrategyConcLiq)3939",
              "contract": "BeefyVaultConcLiq",
              "src": "contracts/vault/BeefyVaultConcLiq.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IStrategyConcLiq)3939": {
              "label": "contract IStrategyConcLiq",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/vault/BeefyVaultConcLiqFactory.sol:BeefyVaultConcLiqFactory": {
        "src": "contracts/vault/BeefyVaultConcLiqFactory.sol:9",
        "version": {
          "withMetadata": "6078ea6734cc4e004c74057ee83ece8fd890019d03ff395d445fa23ff5911058",
          "withoutMetadata": "d84aa3808a44ca37806bef9f5f8dc2db8f473fe085b59a55d66d1fb4bf785d6f",
          "linkedWithoutMetadata": "d84aa3808a44ca37806bef9f5f8dc2db8f473fe085b59a55d66d1fb4bf785d6f"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "(address)",
          "cloneVault()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeefyVaultConcLiqFactory",
            "src": "contracts/vault/BeefyVaultConcLiqFactory.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "instance",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeefyVaultConcLiq)15305",
              "contract": "BeefyVaultConcLiqFactory",
              "src": "contracts/vault/BeefyVaultConcLiqFactory.sol:13"
            }
          ],
          "types": {
            "t_contract(BeefyVaultConcLiq)15305": {
              "label": "contract BeefyVaultConcLiq",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    }
  ]
}