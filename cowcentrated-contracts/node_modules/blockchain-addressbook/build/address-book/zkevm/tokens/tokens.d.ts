import { ConstRecord } from '../../../types/const';
import Token from '../../../types/token';
declare const _tokens: {
    readonly ETH: {
        readonly name: "Wrapped Ether";
        readonly address: "0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9";
        readonly symbol: "WETH";
        readonly oracleId: "WETH";
        readonly decimals: 18;
        readonly chainId: 1101;
        readonly website: "https://weth.io/";
        readonly description: "Ether or ETH is the native currency built on the Ethereum blockchain.";
        readonly bridge: "zkevm-canonical";
        readonly logoURI: "";
        readonly documentation: "https://ethereum.org/en/developers/docs/";
    };
    readonly WETH: {
        readonly name: "Wrapped Ether";
        readonly address: "0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9";
        readonly symbol: "WETH";
        readonly oracleId: "WETH";
        readonly decimals: 18;
        readonly chainId: 1101;
        readonly website: "https://weth.io/";
        readonly description: "Ether or ETH is the native currency built on the Ethereum blockchain.";
        readonly bridge: "zkevm-canonical";
        readonly logoURI: "";
        readonly documentation: "https://ethereum.org/en/developers/docs/";
    };
    readonly WNATIVE: {
        readonly name: "Wrapped Ether";
        readonly address: "0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9";
        readonly symbol: "WETH";
        readonly oracleId: "WETH";
        readonly decimals: 18;
        readonly chainId: 1101;
        readonly website: "https://weth.io/";
        readonly description: "Ether or ETH is the native currency built on the Ethereum blockchain.";
        readonly bridge: "zkevm-canonical";
        readonly logoURI: "";
        readonly documentation: "https://ethereum.org/en/developers/docs/";
    };
    readonly USDC: {
        readonly name: "USD Coin";
        readonly symbol: "USDC";
        readonly oracleId: "USDC";
        readonly address: "0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035";
        readonly chainId: 1101;
        readonly decimals: 6;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035.svg";
        readonly website: "https://www.circle.com/usdc";
        readonly documentation: "https://developers.circle.com/docs";
        readonly description: "USDC is a fully collateralized US dollar stablecoin. USDC is issued by regulated financial institutions, backed by fully reserved assets, redeemable on a 1:1 basis for US dollars.";
        readonly bridge: "zkevm-canonical";
    };
    readonly MATIC: {
        readonly name: "Matic Token";
        readonly symbol: "MATIC";
        readonly oracleId: "MATIC";
        readonly address: "0xa2036f0538221a77A3937F1379699f44945018d0";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xa2036f0538221a77A3937F1379699f44945018d0.svg";
        readonly website: "https://polygon.technology/";
        readonly description: "Polygon is a protocol and a framework for building and connecting Ethereum-compatible blockchain networks. Aggregating scalable solutions on Ethereum supporting a multi-chain Ethereum ecosystem.";
        readonly documentation: "https://zkevm.polygon.technology/";
        readonly bridge: "zkevm-canonical";
    };
    readonly WBTC: {
        readonly name: "Wrapped BTC";
        readonly symbol: "WBTC";
        readonly oracleId: "WBTC";
        readonly address: "0xEA034fb02eB1808C2cc3adbC15f447B93CbE08e1";
        readonly chainId: 1101;
        readonly decimals: 8;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xEA034fb02eB1808C2cc3adbC15f447B93CbE08e1.svg";
        readonly website: "https://wbtc.network/";
        readonly documentation: "https://wbtc.network/";
        readonly description: "Wrapped Bitcoin (WBTC) is the first ERC20 token backed 1:1 with Bitcoin. Completely transparent. 100% verifiable. Community led.";
        readonly bridge: "zkevm-canonical";
    };
    readonly USDT: {
        readonly name: "Tether USD";
        readonly symbol: "USDT";
        readonly oracleId: "USDT";
        readonly address: "0x1E4a5963aBFD975d8c9021ce480b42188849D41d";
        readonly chainId: 1101;
        readonly decimals: 6;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0x1E4a5963aBFD975d8c9021ce480b42188849D41d.svg";
        readonly website: "https://tether.to/";
        readonly description: "Tether is a stablecoin pegged to the US Dollar. A stablecoin is a type of cryptocurrency whose value is pegged to another fiat currency like the US Dollar or to a commodity like Gold.Tether is the first stablecoin to be created and it is the most popular stablecoin used in the ecosystem.";
        readonly documentation: "https://tether.to/en/how-it-works";
        readonly bridge: "zkevm-canonical";
    };
    readonly DAI: {
        readonly name: "Dai Stablecoin";
        readonly symbol: "DAI";
        readonly oracleId: "DAI";
        readonly address: "0xC5015b9d9161Dca7e18e32f6f25C4aD850731Fd4";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xC5015b9d9161Dca7e18e32f6f25C4aD850731Fd4.svg";
        readonly website: "https://makerdao.com/en/";
        readonly description: "Dai is a stablecoin cryptocurrency which aims to keep its value as close to one United States dollar as possible through an automated system of smart contracts on the Ethereum blockchain";
        readonly documentation: "https://docs.makerdao.com/";
        readonly bridge: "zkevm-canonical";
    };
    readonly stMATIC: {
        readonly name: "Staked MATIC";
        readonly symbol: "stMATIC";
        readonly oracleId: "stMATIC";
        readonly address: "0x83b874c1e09D316059d929da402dcB1A98e92082";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0x83b874c1e09D316059d929da402dcB1A98e92082.svg";
        readonly website: "https://polygon.lido.fi/";
        readonly description: "Lido for Polygon is a liquid staking solution for MATIC backed by industry-leading staking providers.";
        readonly documentation: "https://docs.lido.fi/";
        readonly bridge: "zkevm-canonical";
    };
    readonly QUICK: {
        readonly name: "QuickSwap";
        readonly symbol: "QUICK";
        readonly oracleId: "QUICK";
        readonly address: "0x68286607A1d43602d880D349187c3c48c0fD05E6";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0x68286607A1d43602d880D349187c3c48c0fD05E6.svg";
        readonly website: "https://quickswap.exchange/#/swap";
        readonly description: "Next-gen Layer 2 DEX. Trade at lightning-fast speeds with near-zero gas fees.";
        readonly documentation: "https://docs.quickswap.exchange/";
        readonly bridge: "zkevm-canonical";
    };
    readonly FRAX: {
        readonly name: "Frax";
        readonly symbol: "FRAX";
        readonly oracleId: "FRAX";
        readonly address: "0xFf8544feD5379D9ffa8D47a74cE6b91e632AC44D";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xFf8544feD5379D9ffa8D47a74cE6b91e632AC44D.svg";
        readonly website: "https://frax.finance/";
        readonly description: "Frax is the first fractional-algorithmic stablecoin protocol.";
        readonly documentation: "https://docs.frax.finance/";
        readonly bridge: "frax";
    };
    readonly frxETH: {
        readonly name: "Frax Ether";
        readonly symbol: "frxETH";
        readonly oracleId: "frxETH";
        readonly address: "0xCf7eceE185f19e2E970a301eE37F93536ed66179";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xCf7eceE185f19e2E970a301eE37F93536ed66179.svg";
        readonly website: "https://app.frax.finance/frxeth/mint";
        readonly description: "frxETH acts as a stablecoin loosely pegged to ETH, so that 1 frxETH always represents 1 ETH and the amount of frxETH in circulation matches the amount of ETH in the Frax ETH system. When ETH is sent to the frxETHMinter, an equivalent amount of frxETH is minted. Holding frxETH on its own is not eligible for staking yield and should be thought of as analogous as holding ETH.";
        readonly documentation: "https://docs.frax.finance/frax-ether/frxeth-and-sfrxeth";
        readonly bridge: "frax";
    };
    readonly BAL: {
        readonly name: "Balancer";
        readonly symbol: "BAL";
        readonly oracleId: "BAL";
        readonly address: "0x120eF59b80774F02211563834d8E3b72cb1649d6";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "https://tokens.pancakeswap.finance/images/0xCf7eceE185f19e2E970a301eE37F93536ed66179.svg";
        readonly website: "https://balancer.fi/";
        readonly description: "Balancer turns the concept of an index fund on its head: instead of a paying fees to portfolio managers to rebalance your portfolio, you collect fees from traders, who rebalance your portfolio by following arbitrage opportunities. ";
        readonly documentation: "https://docs.balancer.fi/";
        readonly bridge: "zkevm-canonical";
    };
    readonly wstETH: {
        readonly name: "Lido Wrapped Staked ETH";
        readonly symbol: "wstETH";
        readonly oracleId: "wstETH";
        readonly address: "0x5D8cfF95D7A57c0BF50B30b43c7CC0D52825D4a9";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly website: "https://lido.fi/";
        readonly description: "Lido is a liquid staking solution for ETH backed by industry-leading staking providers. Lido lets users stake their ETH - without locking assets or maintaining infrastructure - whilst participating in on-chain activities, e.g. lending. Lido attempts to solve the problems associated with initial ETH staking - illiquidity, immovability and accessibility - making staked ETH liquid and allowing for participation with any amount of ETH to improve security of the Ethereum network.";
        readonly logoURI: "";
        readonly documentation: "https://docs.lido.fi/";
        readonly bridge: "zkevm-canonical";
    };
    readonly rETH: {
        readonly name: "Rocket Pool ETH";
        readonly symbol: "rETH";
        readonly oracleId: "rETH";
        readonly address: "0xb23C20EFcE6e24Acca0Cef9B7B7aA196b84EC942";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly website: "https://rocketpool.net/";
        readonly description: "As a Rocket Pool staker, your role is to deposit ETH into the deposit pool which will enable a node operator to create a new Beacon Chain validator. You can stake as little as 0.01 ETH. In doing so, you will be given a token called rETH. rETH represents both how much ETH you deposited, and when you deposited it.";
        readonly logoURI: "";
        readonly documentation: "https://docs.rocketpool.net/guides/";
        readonly bridge: "zkevm-canonical";
    };
    readonly AAVE: {
        readonly name: "Aave";
        readonly address: "0x68791CFE079814c46e0E25C19Bcc5BFC71A744f7";
        readonly symbol: "AAVE";
        readonly oracleId: "AAVE";
        readonly decimals: 18;
        readonly chainId: 1101;
        readonly website: "https://aave.com/";
        readonly description: "Aave is a decentralized non-custodial liquidity protocol where users can participate as depositors or borrowers. Depositors provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralized (perpetually) or undercollateralized (one-block liquidity) fashion.";
        readonly logoURI: "https://ftmscan.com/token/images/aave_32.png";
        readonly documentation: "https://docs.aave.com/";
        readonly bridge: "zkevm-canonical";
    };
    readonly CRV: {
        readonly name: "CRV";
        readonly address: "0x3d5320821BfCa19fb0B5428F2c79d63bd5246f89";
        readonly symbol: "CRV";
        readonly oracleId: "CRV";
        readonly decimals: 18;
        readonly chainId: 1101;
        readonly website: "https://curve.fi/";
        readonly description: "Curve is an exchange liquidity pool on Ethereum. Curve is designed for extremely efficient stablecoin trading and low risk, supplemental fee income for liquidity providers, without an opportunity cost.";
        readonly bridge: "zkevm-canonical";
        readonly logoURI: "";
        readonly documentation: "https://curve.readthedocs.io/";
    };
    readonly LINK: {
        readonly name: "Chainlink";
        readonly symbol: "LINK";
        readonly oracleId: "LINK";
        readonly address: "0x4B16e4752711A7ABEc32799C976F3CeFc0111f2B";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly website: "https://chain.link/";
        readonly description: "Link is the currency used to pay the Chainlink node operators for their work. Chainlink node operators have to stake LINK in the network in order to participate and provide data services.";
        readonly bridge: "zkevm-canonical";
        readonly logoURI: "https://hecoinfo.com/token/images/chainlink_32.png";
        readonly documentation: "https://docs.chain.link/resources/link-token-contracts";
    };
    readonly ankrETH: {
        readonly name: "Ankr Staked ETH";
        readonly symbol: "ankrETH";
        readonly oracleId: "ankrETH";
        readonly address: "0x12D8CE035c5DE3Ce39B1fDD4C1d5a745EAbA3b8C";
        readonly chainId: 1101;
        readonly decimals: 18;
        readonly logoURI: "";
        readonly website: "https://www.ankr.com/";
        readonly description: "ankrETH is a liquid staking solution that lets users earn Ethereum staking rewards while remaining liquid. The value of ankrETH tokens appreciates over time in relation to ETH due to reward accumulation, enhancing capital efficiency and preserving liquidity.";
        readonly documentation: "https://www.ankr.com/docs/liquid-staking/eth/overview/";
        readonly bridge: "ankr";
    };
};
export declare const tokens: ConstRecord<typeof _tokens, Token>;
export {};
