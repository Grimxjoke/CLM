

function main() {
    let gammaArray = [0.0001, 0.0005,  0.003, 0.01]
    let rArray = [1, 0.1, 0.01, 0.001]
  for (let i = 0; i < gammaArray.length; i++) {
    for (let j = 0; j < rArray.length; j++) {
      if (lhs(gammaArray[i], rArray[j]) <= 0) {
        result = 0;
      } else {
        result = calc(gammaArray[i], rArray[j])*100;
      }
      const resultLine = result === 0 ? `| No Risk` : `| Price Deviation Risk above: ${result.toFixed(2)}%`;
     // console.log(`Pool Fee: ${gammaArray[i] * 100}%`, `| Beefy Strategy Liquidity of Total Liquidity: ${rArray[j] * 100}%`, resultLine);
    }

    console.log(Math.log(1.01) / Math.log(1.0001));
    console.log(Math.log(.99) / Math.log(1.0001));
  }
}

function calc(gamma, r) {
    return (lhs(gamma, r)**(-1)) - 1;
}

function lhs(gamma, r) {
    const a = 1/2;
    const b = (1 - 2*gamma) / (2 - 2*gamma);
    const c = (r**(-1)) * ((2*gamma) / (1 - gamma));
    const inner = a + b - c;
    const outer = (1 - gamma) * inner;
    return outer;
}

main();